#TouhouDanmakufu[Single]
#ScriptVersion[3]
#Player[./../player/Murtaugh/Murtaugh_Player.png]
#Title["Boss1 Attack2 Normal"]
#Text["Ellipse attack"]

let bossObj;
let bossX = 0;
let bossY = 0;
let imgBoss = GetCurrentScriptDirectory ~ "derp.png";
	
#include "script/FLUXTINUPAZZ/system/Default_ShotConst.txt"

@Initialize {
	SetAutoDeleteObject(true);
	// define a boss in bossObj and register it
	bossObj = ObjEnemy_Create(OBJ_ENEMY_BOSS);
	ObjEnemy_Regist(bossObj);

	ObjPrim_SetTexture(bossObj,imgBoss);
	ObjSprite2D_SetSourceRect(bossObj,0,0,120,121);
	ObjSprite2D_SetDestCenter(bossObj);
	// move boss to desired x y location at desired speed
	ObjMove_SetDestAtSpeed(bossObj,192,120,5);
	
	mainTask;
} 

@Event { 
// setting the boss timer and life
	alternative(GetEventType()) 
	case(EV_REQUEST_LIFE) { 
		SetScriptResult(1000);
	}
	case(EV_REQUEST_TIMER) { 
		SetScriptResult(450);
	}
} 

@MainLoop {
	bossX = ObjMove_GetX(bossObj);
	bossY = ObjMove_GetY(bossObj);
	
// collision for the shots and player
	ObjEnemy_SetIntersectionCircleToShot(bossObj,bossX,bossY,24);
	ObjEnemy_SetIntersectionCircleToPlayer(bossObj,bossX,bossY,32);
	
	yield;
} 

@Finalize {

} 


function wait(w) { loop(w) { yield; } } 

task mainTask { 
	renderBoss;
	movement;
	TEnd;
} 

task renderBoss {
	let dir;
	let speed;

	while(!Obj_IsDeleted(bossObj)) {
		
		// update boss speed and direction locally
		dir = ObjMove_GetAngle(bossObj);
		speed = ObjMove_GetSpeed(bossObj);
		
		// if the boss is idle, show this image/rect
		if(speed == 0) { ObjSprite2D_SetSourceRect(bossObj,0,0,120,121); ObjRender_SetAngleXYZ(bossObj,0,0,0); } 			// boss holding location
		else if(cos(dir) < 0) { ObjSprite2D_SetSourceRect(bossObj,0,0,120,121); ObjRender_SetAngleXYZ(bossObj,0,0,0); } 	// boss moving to the left
		else if(cos(dir) > 0) { ObjSprite2D_SetSourceRect(bossObj,0,0,120,121); ObjRender_SetAngleXYZ(bossObj,0,180,0); } 	// boss moving to the right
		
		yield;
	}
	
} 

task movement {
	loop {
	wait(50);
	fire;
	}
	
}

function angleToPlayer {
	let dir = atan2(GetPlayerY-bossY,GetPlayerX-bossX);
	return dir;
}

task fire {
	let angleT = 30;
	loop(30){
        CreateShotA1(ObjMove_GetX(bossObj) + 75*cos(angleT+45), ObjMove_GetY(bossObj) + 30*sin(angleT), 2, angleT, 1, 0); // create 30 default bullets in an ellipse (to make circle, make the multiplier on cos and sin the same)
        angleT += 360/30;
    	}
	yield;
} 

task TEnd {	
	while(ObjEnemy_GetInfo(bossObj,INFO_LIFE) > 0) {
		yield;
	}
	Obj_Delete(bossObj); // eliminate boss, sets bullet spawn to corner
	wait(120);	
	CloseScript(GetOwnScriptID()); // ends script
}